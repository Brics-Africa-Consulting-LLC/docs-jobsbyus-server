{"list":[{"title":"deployDocs","link":"<a href=\"global.html#deployDocs\">deployDocs</a>","description":"<p>Deploys the documentation by committing and pushing changes to the &quot;docs&quot; subtree.</p>"},{"title":"encrypt","link":"<a href=\"global.html#encrypt\">encrypt</a>","description":"<p>encrypts strings mainly for passwords</p>"},{"title":"getCurrentDeveloperName","link":"<a href=\"global.html#getCurrentDeveloperName\">getCurrentDeveloperName</a>","description":"<p>Gets the name or username of the developer from Git's global configuration.</p>"},{"title":"getDocsPath","link":"<a href=\"global.html#getDocsPath\">getDocsPath</a>","description":"<p>Gets the absolute path of the &quot;docs&quot; directory using Git's root path.</p>"},{"title":"module:UserModule","link":"<a href=\"module-UserModule.html\">UserModule</a>"},{"title":"module:UserModule.UserModel","link":"<a href=\"module-UserModule.html#.UserModel\">UserModel</a>","description":"<p>Mongoose model for the User schema.</p>"},{"title":"module:UserModule.createUser","link":"<a href=\"module-UserModule.html#.createUser\">createUser</a>","description":"<p>Create a new user</p>"},{"title":"module:UserModule.deletUserById","link":"<a href=\"module-UserModule.html#.deletUserById\">deletUserById</a>","description":"<p>Deletes user with the user's ID</p>"},{"title":"module:UserModule.getUserByEmail","link":"<a href=\"module-UserModule.html#.getUserByEmail\">getUserByEmail</a>","description":"<p>Gets a user by their email</p>"},{"title":"module:UserModule.getUserById","link":"<a href=\"module-UserModule.html#.getUserById\">getUserById</a>","description":"<p>Gets user by their ID</p>"},{"title":"module:UserModule.getUserBySessionToken","link":"<a href=\"module-UserModule.html#.getUserBySessionToken\">getUserBySessionToken</a>","description":"<p>Gets user by their session token</p>"},{"title":"module:UserModule.getUsers","link":"<a href=\"module-UserModule.html#.getUsers\">getUsers</a>","description":"<p>Gets all the users</p>"},{"title":"module:UserModule.updateuUserById","link":"<a href=\"module-UserModule.html#.updateuUserById\">updateuUserById</a>","description":"<p>Updates the user with the ID of the user</p>"},{"title":"module:UserModule~User","link":"<a href=\"module-UserModule.html#~User\">User</a>","description":"<p>Represents a user in the database.</p>"},{"title":"module:UserModule~UserSchema","link":"<a href=\"module-UserModule.html#~UserSchema\">UserSchema</a>","description":"<p>Mongoose schema for the User model.</p>"},{"title":"module:config","link":"<a href=\"module-config.html\">config</a>","description":"<p>General configurations are set here</p>"},{"title":"module:config.MONGO_URL","link":"<a href=\"module-config.html#.MONGO_URL\">MONGO_URL</a>","description":"<p>the Authentication and Connection Database URL</p>"},{"title":"module:server","link":"<a href=\"module-server.html\">server</a>","description":"<p>Imports necessary modules for the Express application.</p>\n<p>express The Express.js web application framework.\nhttp The Node.js built-in HTTP module.\nbody-parser Middleware for parsing incoming request bodies.\ncookie-parser Middleware for parsing cookies.\ncompression Middleware for compressing response bodies.\ncors Middleware for enabling Cross-Origin Resource Sharing (CORS).</p>"},{"title":"module:server~app","link":"<a href=\"module-server.html#~app\">app</a>","description":"<p>Creates an instance of the Express application.</p>"},{"title":"module:server~server","link":"<a href=\"module-server.html#~server\">server</a>","description":"<p>creates an instance of the http server</p>"},{"title":"randomCryptoHash","link":"<a href=\"global.html#randomCryptoHash\">randomCryptoHash</a>","description":"<p>generates a rando hash or encrypted string</p>"},{"title":"router","link":"<a href=\"global.html#router\">router</a>","description":"<p>base router for the API</p>"}]}