{"list":[{"title":"deployDocs","link":"<a href=\"global.html#deployDocs\">deployDocs</a>","description":"<p>Deploys the documentation by committing and pushing changes to the &quot;docs&quot; subtree.</p>"},{"title":"encrypt","link":"<a href=\"global.html#encrypt\">encrypt</a>","description":"<p>encrypts strings mainly for passwords</p>"},{"title":"getCurrentDeveloperName","link":"<a href=\"global.html#getCurrentDeveloperName\">getCurrentDeveloperName</a>","description":"<p>Gets the name or username of the developer from Git's global configuration.</p>"},{"title":"getDocsPath","link":"<a href=\"global.html#getDocsPath\">getDocsPath</a>","description":"<p>Gets the absolute path of the &quot;docs&quot; directory using Git's root path.</p>"},{"title":"module:Config","link":"<a href=\"module-Config.html\">Config</a>","description":"<p>General configurations and common constants for APIs</p>"},{"title":"module:Config~explorer","link":"<a href=\"module-Config.html#~explorer\">explorer</a>","description":"<p>Loads the environment file (Looks for it within the project scope)\nthe environment file is not .env but .envrc.json. An example file\n(which is a copy of it) has been added for reference. Just like the\n.env files they are in key-value pair, the only difference is that\nthis is JSON. For every environment variable you want to use, it is\nrecommended you add it to the .envrc.json file and exporting it as\na constant in the config.js (this file)</p>"},{"title":"module:Database","link":"<a href=\"module-Database.html\">Database</a>","description":"<p>Main database connection</p>"},{"title":"module:Database.connectToDatabase","link":"<a href=\"module-Database.html#.connectToDatabase\">connectToDatabase</a>","description":"<p>Asynchronous function connect to the database.</p>"},{"title":"module:Login","link":"<a href=\"module-Login.html\">Login</a>","description":"<p>Controller for logging users in</p>"},{"title":"module:Login.login","link":"<a href=\"module-Login.html#.login\">login</a>","description":"<p>Asynchronous function for logging users in.</p>"},{"title":"module:Register","link":"<a href=\"module-Register.html\">Register</a>","description":"<p>Controller for registering users</p>"},{"title":"module:Register.register","link":"<a href=\"module-Register.html#.register\">register</a>","description":"<p>Asynchronous function for registering a new user.</p>"},{"title":"module:Server","link":"<a href=\"module-Server.html\">Server</a>","description":"<p>Imports necessary modules for the Express application.</p>\n<p>express The Express.js web application framework.\nhttp The Node.js built-in HTTP module.\nbody-parser Middleware for parsing incoming request bodies.\ncookie-parser Middleware for parsing cookies.\ncompression Middleware for compressing response bodies.\ncors Middleware for enabling Cross-Origin Resource Sharing (CORS).</p>"},{"title":"module:Server~app","link":"<a href=\"module-Server.html#~app\">app</a>","description":"<p>Creates an instance of the Express application.</p>"},{"title":"module:Server~server","link":"<a href=\"module-Server.html#~server\">server</a>","description":"<p>creates an instance of the http server</p>"},{"title":"module:UserModule","link":"<a href=\"module-UserModule.html\">UserModule</a>"},{"title":"module:UserModule.UserModel","link":"<a href=\"module-UserModule.html#.UserModel\">UserModel</a>","description":"<p>Mongoose model for the User schema.</p>"},{"title":"module:UserModule.createUser","link":"<a href=\"module-UserModule.html#.createUser\">createUser</a>","description":"<p>Create a new user</p>"},{"title":"module:UserModule.deletUserById","link":"<a href=\"module-UserModule.html#.deletUserById\">deletUserById</a>","description":"<p>Deletes user with the user's ID</p>"},{"title":"module:UserModule.getUserByEmail","link":"<a href=\"module-UserModule.html#.getUserByEmail\">getUserByEmail</a>","description":"<p>Gets a user by their email</p>"},{"title":"module:UserModule.getUserById","link":"<a href=\"module-UserModule.html#.getUserById\">getUserById</a>","description":"<p>Gets user by their ID</p>"},{"title":"module:UserModule.getUserBySessionToken","link":"<a href=\"module-UserModule.html#.getUserBySessionToken\">getUserBySessionToken</a>","description":"<p>Gets user by their session token</p>"},{"title":"module:UserModule.getUsers","link":"<a href=\"module-UserModule.html#.getUsers\">getUsers</a>","description":"<p>Gets all the users</p>"},{"title":"module:UserModule.updateuUserById","link":"<a href=\"module-UserModule.html#.updateuUserById\">updateuUserById</a>","description":"<p>Updates the user with the ID of the user</p>"},{"title":"module:UserModule~User","link":"<a href=\"module-UserModule.html#~User\">User</a>","description":"<p>Represents a user in the database.</p>"},{"title":"module:UserModule~UserSchema","link":"<a href=\"module-UserModule.html#~UserSchema\">UserSchema</a>","description":"<p>Mongoose schema for the User model.</p>"},{"title":"randomCryptoHash","link":"<a href=\"global.html#randomCryptoHash\">randomCryptoHash</a>","description":"<p>generates a rando hash or encrypted string</p>"},{"title":"router","link":"<a href=\"global.html#router\">router</a>","description":"<p>base router for the API</p>"}]}